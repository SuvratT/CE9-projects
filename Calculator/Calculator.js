//
// Copyright (c) 2018 Cisco Systems
// Licensed under the MIT License
//

//
// Calculator written by Adam Schaeffer
//http://technologyordie.com
//

const xapi = require('xapi');

var formula ="";

function error_handle(error){
  console.log('Error',error);
}

/* write the calulator screen with currnet data or solution */
function write_screen(data){
  xapi.command("UserInterface Extensions Widget SetValue", { WidgetId: "display", Value: data}).catch(error_handle);
}

/* Unset the button's blue background when its press is released */
function clear_button(event) {
   xapi.command('UserInterface Extensions Widget UnsetValue', {WidgetId: event.WidgetId}).catch(error_handle);
}

/* Clear the "screen" of the calculator */
function clear_screen() {
  formula = "";
  write_screen("");
}

/*builds the formula and outputs it as text to display */
function formula_builder(event){
  formula = formula + event.Value;
  console.log(formula);
  xapi.command("UserInterface Extensions Widget SetValue", { WidgetId: "display", Value: formula}).catch(error_handle);
}

/* parse string into values used to execute the math */
function parse_calculation_string(s) {
    // --- Parse a calculation string into an array of numbers and operators
    var calculation = [],
        current = '';
    for (var i = 0, ch; ch = s.charAt(i); i++) {
        if ('^*/+-'.indexOf(ch) > -1) {
            if (current === '' && ch === '-') {
                current = '-';
            } else {
                calculation.push(parseFloat(current), ch);
                current = '';
            }
        } else {
            current += s.charAt(i);
        }
    }
    if (current !== '') {
        calculation.push(parseFloat(current));
    }
    return calculation;
}

/* calulates answer from the array generated by the parsing function */
function calculate(calc) {
    var ops = [{'^': (a, b) => Math.pow(a, b)},
               {'*': (a, b) => a * b, '/': (a, b) => a / b},
               {'+': (a, b) => a + b, '-': (a, b) => a - b}],
        newCalc = [],
        currentOp;
    for (var i = 0; i < ops.length; i++) {
        for (var j = 0; j < calc.length; j++) {
            if (ops[i][calc[j]]) {
                currentOp = ops[i][calc[j]];
            } else if (currentOp) {
                newCalc[newCalc.length - 1] =
                    currentOp(newCalc[newCalc.length - 1], calc[j]);
                currentOp = null;
            } else {
                newCalc.push(calc[j]);
            }
            console.log(newCalc);
        }
        calc = newCalc;
        newCalc = [];
    }
    if (calc.length > 1) {
        console.log('Error: unable to resolve calculation');
        return calc;
    } else {
        return calc[0];
    }
}


/* listen for events from the calculator widget */
xapi.event.on('UserInterface Extensions Widget Action', (event) => {

  /* If a button is pressed */
  if(event.Type === 'pressed'){
    switch(event.Value) {
    case "C":
      clear_screen();
      break;
      case "=":
        //Solve the Problem
        formula = calculate(parse_calculation_string(formula));
        write_screen(formula);
        break;
      case "รท":
        //replace รท with /
        event.Value = "/"
        formula_builder(event);
        break;
      default:
        formula_builder(event);
        //code block
      }
    }

    /* Clear the blue background of the button when released */
    if (event.Type === 'released'){
      clear_button(event);
    }

});
